<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:y="http://www.yworks.com/xml/graphml">
  <key for="node" id="n" yfiles.type="nodegraphics"/>
  <key for="edge" id="e" yfiles.type="edgegraphics"/>
  <key for="node" id="d" attr.name="Description" attr.type="string"/>
  <graph id="G" edgedefault="directed">
    <node id="1">
      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">system</y:NodeLabel></y:ShapeNode></data>
      <data key="d">DigitalTop (TestHarness.dut.system)</data>
      <graph id="1::" edgedefault="directed">
        <node id="1::16">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::15">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::14">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::10">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">, 
</data>
        </node>
        <node id="1::7">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::6">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::5">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::3">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::2">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="1::1">
          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
          <data key="d">Interrupt Node
, 
</data>
        </node>
        <node id="137">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntSyncSyncCrossingSink_4 (TestHarness.dut.system.intsink_1)</data>
          <graph id="137::" edgedefault="directed">
            <node id="137::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
sync:0</data>
            </node>
          </graph>
        </node>
        <node id="132">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">uartClockDomainWrapper</y:NodeLabel></y:ShapeNode></data>
          <data key="d">ClockSinkDomain (TestHarness.dut.system.uartClockDomainWrapper)</data>
          <graph id="132::" edgedefault="directed">
            <node id="132::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="133">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">uart_0</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLUART (TestHarness.dut.system.uartClockDomainWrapper.uart_0)</data>
              <graph id="133::" edgedefault="directed">
                <node id="133::4">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
</data>
                </node>
                <node id="133::3">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
                <node id="133::2">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">
---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
                <node id="133::1">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
</data>
                </node>
                <node id="133::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
                <node id="138">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">IntSyncCrossingSource_5 (TestHarness.dut.system.uartClockDomainWrapper.uart_0.intsource)</data>
                  <graph id="138::" edgedefault="directed">
                    <node id="138::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
                    </node>
                  </graph>
                </node>
                <node id="135">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLBuffer_13 (TestHarness.dut.system.uartClockDomainWrapper.uart_0.buffer)</data>
                  <graph id="135::" edgedefault="directed">
                    <node id="135::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="128">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">m</y:NodeLabel></y:ShapeNode></data>
          <data key="d">SerialAdapter (TestHarness.dut.system.m)</data>
          <graph id="128::" edgedefault="directed">
            <node id="128::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

, 
</data>
            </node>
          </graph>
        </node>
        <node id="125">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">bootrom</y:NodeLabel></y:ShapeNode></data>
          <data key="d">TLROM (TestHarness.dut.system.bootrom)</data>
          <graph id="125::" edgedefault="directed">
            <node id="125::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">
---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
            </node>
          </graph>
        </node>
        <node id="117">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_2</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_4 (TestHarness.dut.system.intsource_2)</data>
          <graph id="117::" edgedefault="directed">
            <node id="117::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="115">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource_1</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_3 (TestHarness.dut.system.intsource_1)</data>
          <graph id="115::" edgedefault="directed">
            <node id="115::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="113">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntSyncCrossingSource_2 (TestHarness.dut.system.intsource)</data>
          <graph id="113::" edgedefault="directed">
            <node id="113::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
alreadyRegistered:false</data>
            </node>
          </graph>
        </node>
        <node id="95">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">boom_tile</y:NodeLabel></y:ShapeNode></data>
          <data key="d">BoomTile (TestHarness.dut.system.boom_tile)</data>
          <graph id="95::" edgedefault="directed">
            <node id="95::20">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::19">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::18">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::16">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
            </node>
            <node id="95::15">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
            </node>
            <node id="95::12">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::11">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::10">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::9">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::8">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::7">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="95::6">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::5">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::4">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::3">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::2">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::1">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="95::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
            </node>
            <node id="116">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_3</y:NodeLabel></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_2 (TestHarness.dut.system.boom_tile.intsink_3)</data>
              <graph id="116::" edgedefault="directed">
                <node id="116::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="114">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_2</y:NodeLabel></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink_1 (TestHarness.dut.system.boom_tile.intsink_2)</data>
              <graph id="114::" edgedefault="directed">
                <node id="114::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="112">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink_1</y:NodeLabel></y:ShapeNode></data>
              <data key="d">IntSyncSyncCrossingSink (TestHarness.dut.system.boom_tile.intsink_1)</data>
              <graph id="112::" edgedefault="directed">
                <node id="112::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:0</data>
                </node>
              </graph>
            </node>
            <node id="111">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsink</y:NodeLabel></y:ShapeNode></data>
              <data key="d">IntSyncAsyncCrossingSink (TestHarness.dut.system.boom_tile.intsink)</data>
              <graph id="111::" edgedefault="directed">
                <node id="111::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
sync:3</data>
                </node>
              </graph>
            </node>
            <node id="108">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_11 (TestHarness.dut.system.boom_tile.buffer)</data>
              <graph id="108::" edgedefault="directed">
                <node id="108::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="104">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">frontend</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BoomFrontend (TestHarness.dut.system.boom_tile.frontend)</data>
              <graph id="104::" edgedefault="directed">
                <node id="105">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">icache</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">ICache (TestHarness.dut.system.boom_tile.frontend.icache)</data>
                  <graph id="105::" edgedefault="directed">
                    <node id="105::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="103">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dcache</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BoomNonBlockingDCache (TestHarness.dut.system.boom_tile.dcache)</data>
              <graph id="103::" edgedefault="directed">
                <node id="103::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

, 
</data>
                </node>
              </graph>
            </node>
            <node id="102">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace_1</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BundleBroadcast_3 (TestHarness.dut.system.boom_tile.trace_1)</data>
              <graph id="102::" edgedefault="directed">
                <node id="102::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="101">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">bpwatch</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BundleBroadcast_2 (TestHarness.dut.system.boom_tile.bpwatch)</data>
              <graph id="101::" edgedefault="directed">
                <node id="101::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="100">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tracecore</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BundleBroadcast_1 (TestHarness.dut.system.boom_tile.tracecore)</data>
              <graph id="100::" edgedefault="directed">
                <node id="100::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="99">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">trace</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BundleBroadcast (TestHarness.dut.system.boom_tile.trace)</data>
              <graph id="99::" edgedefault="directed">
                <node id="99::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="98">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intXbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">IntXbar_4 (TestHarness.dut.system.boom_tile.intXbar)</data>
              <graph id="98::" edgedefault="directed">
                <node id="98::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">Interrupt Node
, 
</data>
                </node>
              </graph>
            </node>
            <node id="96">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tlMasterXbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_8 (TestHarness.dut.system.boom_tile.tlMasterXbar)</data>
              <graph id="96::" edgedefault="directed">
                <node id="96::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

On Input Edge:

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="80">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">debug_1</y:NodeLabel></y:ShapeNode></data>
          <data key="d">TLDebugModule (TestHarness.dut.system.debug_1)</data>
          <graph id="80::" edgedefault="directed">
            <node id="90">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmInner</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLDebugModuleInnerAsync (TestHarness.dut.system.debug_1.dmInner)</data>
              <graph id="90::" edgedefault="directed">
                <node id="92">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmiXing</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLAsyncCrossingSink (TestHarness.dut.system.debug_1.dmInner.dmiXing)</data>
                  <graph id="92::" edgedefault="directed">
                    <node id="92::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="91">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmInner</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLDebugModuleInner (TestHarness.dut.system.debug_1.dmInner.dmInner)</data>
                  <graph id="91::" edgedefault="directed">
                    <node id="91::2">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                    <node id="91::1">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                    <node id="91::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="81">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmOuter</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLDebugModuleOuterAsync (TestHarness.dut.system.debug_1.dmOuter)</data>
              <graph id="81::" edgedefault="directed">
                <node id="89">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">asource</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLAsyncCrossingSource (TestHarness.dut.system.debug_1.dmOuter.asource)</data>
                  <graph id="89::" edgedefault="directed">
                    <node id="89::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 3

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="86">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmiBypass</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLBusBypass (TestHarness.dut.system.debug_1.dmOuter.dmiBypass)</data>
                  <graph id="86::" edgedefault="directed">
                    <node id="86::1">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 3

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 3

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                    <node id="86::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                    <node id="88">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">error</y:NodeLabel></y:ShapeNode></data>
                      <data key="d">TLError_1 (TestHarness.dut.system.debug_1.dmOuter.dmiBypass.error)</data>
                      <graph id="88::" edgedefault="directed">
                        <node id="88::0">
                          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                          <data key="d">
---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = error
Manager Address = List(AddressSet(0x0, 0xffffffffffffffffffffffffffffffff))
supportsAcquireT = TransferSizes[1, 4]
supportsAcquireB = TransferSizes[1, 4]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[1, 4]

, 
</data>
                        </node>
                      </graph>
                    </node>
                    <node id="87">
                      <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">bar</y:NodeLabel></y:ShapeNode></data>
                      <data key="d">TLBusBypassBar (TestHarness.dut.system.debug_1.dmOuter.dmiBypass.bar)</data>
                      <graph id="87::" edgedefault="directed">
                        <node id="87::0">
                          <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                          <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = error
Manager Address = List(AddressSet(0x0, 0xffffffffffffffffffffffffffffffff))
supportsAcquireT = TransferSizes[1, 4]
supportsAcquireB = TransferSizes[1, 4]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[1, 4]

On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 3

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                        </node>
                      </graph>
                    </node>
                  </graph>
                </node>
                <node id="85">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">intsource</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">IntSyncCrossingSource (TestHarness.dut.system.debug_1.dmOuter.intsource)</data>
                  <graph id="85::" edgedefault="directed">
                    <node id="85::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
alreadyRegistered:true</data>
                    </node>
                  </graph>
                </node>
                <node id="84">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmOuter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLDebugModuleOuter (TestHarness.dut.system.debug_1.dmOuter.dmOuter)</data>
                  <graph id="84::" edgedefault="directed">
                    <node id="84::1">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmOuter
Manager Address = List(AddressSet(0x40, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                    <node id="84::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">Interrupt Node
, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="83">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmi2tl</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">DMIToTL (TestHarness.dut.system.debug_1.dmOuter.dmi2tl)</data>
                  <graph id="83::" edgedefault="directed">
                    <node id="83::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

Manager Name = dmOuter
Manager Address = List(AddressSet(0x40, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="82">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dmiXbar</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLXbar_7 (TestHarness.dut.system.debug_1.dmOuter.dmiXbar)</data>
                  <graph id="82::" edgedefault="directed">
                    <node id="82::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmOuter
Manager Address = List(AddressSet(0x40, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = debug
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 4
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0x3f), AddressSet(0x44, 0x3), AddressSet(0x48, 0x7), AddressSet(0x58, 0x7), AddressSet(0x60, 0x1f), AddressSet(0x80, 0x7f), AddressSet(0x100, 0xff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

Manager Name = dmOuter
Manager Address = List(AddressSet(0x40, 0x3), AddressSet(0x50, 0x3), AddressSet(0x54, 0x3))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 4]
supportsPutFull = TransferSizes[1, 4]
supportsPutPartial = TransferSizes[1, 4]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="79">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">debugCustomXbarOpt</y:NodeLabel></y:ShapeNode></data>
          <data key="d">DebugCustomXbar (TestHarness.dut.system.debugCustomXbarOpt)</data>
          <graph id="79::" edgedefault="directed">
            <node id="79::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
          </graph>
        </node>
        <node id="76">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clint</y:NodeLabel></y:ShapeNode></data>
          <data key="d">CLINT (TestHarness.dut.system.clint)</data>
          <graph id="76::" edgedefault="directed">
            <node id="76::1">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="76::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">
---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
            </node>
          </graph>
        </node>
        <node id="73">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">plic</y:NodeLabel></y:ShapeNode></data>
          <data key="d">TLPLIC (TestHarness.dut.system.plic)</data>
          <graph id="73::" edgedefault="directed">
            <node id="73::1">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
            <node id="73::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">
---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
            </node>
          </graph>
        </node>
        <node id="72">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar_2</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntXbar_3 (TestHarness.dut.system.xbar_2)</data>
          <graph id="72::" edgedefault="directed">
            <node id="72::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
        <node id="71">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar_1</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntXbar_2 (TestHarness.dut.system.xbar_1)</data>
          <graph id="71::" edgedefault="directed">
            <node id="71::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
        <node id="70">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">xbar</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntXbar_1 (TestHarness.dut.system.xbar)</data>
          <graph id="70::" edgedefault="directed">
            <node id="70::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
        <node id="43">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_l2_wrapper</y:NodeLabel></y:ShapeNode></data>
          <data key="d">CoherenceManagerWrapper (TestHarness.dut.system.subsystem_l2_wrapper)</data>
          <graph id="43::" edgedefault="directed">
            <node id="43::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="68">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_mbus</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_15 (TestHarness.dut.system.subsystem_l2_wrapper.coupler_to_bus_named_subsystem_mbus)</data>
              <graph id="68::" edgedefault="directed">
                <node id="69">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_5 (TestHarness.dut.system.subsystem_l2_wrapper.coupler_to_bus_named_subsystem_mbus.widget)</data>
                  <graph id="69::" edgedefault="directed">
                    <node id="69::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="56">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">binder</y:NodeLabel></y:ShapeNode></data>
              <data key="d">BankBinder (TestHarness.dut.system.subsystem_l2_wrapper.binder)</data>
              <graph id="56::" edgedefault="directed">
                <node id="56::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="55">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coherent_jbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLJbar (TestHarness.dut.system.subsystem_l2_wrapper.coherent_jbar)</data>
              <graph id="55::" edgedefault="directed">
                <node id="55::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="51">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">cork</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLCacheCork (TestHarness.dut.system.subsystem_l2_wrapper.cork)</data>
              <graph id="51::" edgedefault="directed">
                <node id="51::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[1, 64]
supportsAcquireB = TransferSizes[1, 64]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="50">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">InclusiveCache_outer_TLBuffer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_10 (TestHarness.dut.system.subsystem_l2_wrapper.InclusiveCache_outer_TLBuffer)</data>
              <graph id="50::" edgedefault="directed">
                <node id="50::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[1, 64]
supportsAcquireB = TransferSizes[1, 64]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[1, 64]
supportsAcquireB = TransferSizes[1, 64]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="49">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">InclusiveCache_inner_TLBuffer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_9 (TestHarness.dut.system.subsystem_l2_wrapper.InclusiveCache_inner_TLBuffer)</data>
              <graph id="49::" edgedefault="directed">
                <node id="49::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
a:BufferParams:1F, b:BufferParams:0, c:BufferParams:0, d:BufferParams:1F, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="48">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">filter</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLFilter (TestHarness.dut.system.subsystem_l2_wrapper.filter)</data>
              <graph id="48::" edgedefault="directed">
                <node id="48::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="47">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">l2</y:NodeLabel></y:ShapeNode></data>
              <data key="d">InclusiveCache (TestHarness.dut.system.subsystem_l2_wrapper.l2)</data>
              <graph id="47::" edgedefault="directed">
                <node id="47::1">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">
---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
                <node id="47::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[1, 64]
supportsAcquireB = TransferSizes[1, 64]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="46">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_5 (TestHarness.dut.system.subsystem_l2_wrapper.fixedClockNode)</data>
              <graph id="46::" edgedefault="directed">
                <node id="46::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="45">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroup_5 (TestHarness.dut.system.subsystem_l2_wrapper.clockGroup)</data>
              <graph id="45::" edgedefault="directed">
                <node id="45::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="44">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_l2_clock_groups</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_5 (TestHarness.dut.system.subsystem_l2_wrapper.subsystem_l2_clock_groups)</data>
              <graph id="44::" edgedefault="directed">
                <node id="44::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="36">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_mbus</y:NodeLabel></y:ShapeNode></data>
          <data key="d">MemoryBus (TestHarness.dut.system.subsystem_mbus)</data>
          <graph id="36::" edgedefault="directed">
            <node id="36::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="120">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_memory_controller_port_named_axi4</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_14 (TestHarness.dut.system.subsystem_mbus.coupler_to_memory_controller_port_named_axi4)</data>
              <graph id="120::" edgedefault="directed">
                <node id="124">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_4 (TestHarness.dut.system.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.widget)</data>
                  <graph id="124::" edgedefault="directed">
                    <node id="124::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="123">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">tl2axi4</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLToAXI4 (TestHarness.dut.system.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.tl2axi4)</data>
                  <graph id="123::" edgedefault="directed">
                    <node id="123::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="122">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4index</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">AXI4IdIndexer (TestHarness.dut.system.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.axi4index)</data>
                  <graph id="122::" edgedefault="directed">
                    <node id="122::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="121">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">axi4yank</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">AXI4UserYanker (TestHarness.dut.system.subsystem_mbus.coupler_to_memory_controller_port_named_axi4.axi4yank)</data>
                  <graph id="121::" edgedefault="directed">
                    <node id="121::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="42">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">picker</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ProbePicker (TestHarness.dut.system.subsystem_mbus.picker)</data>
              <graph id="42::" edgedefault="directed">
                <node id="42::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="41">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLFIFOFixer_4 (TestHarness.dut.system.subsystem_mbus.fixer)</data>
              <graph id="41::" edgedefault="directed">
                <node id="41::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="40">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_mbus_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_6 (TestHarness.dut.system.subsystem_mbus.subsystem_mbus_xbar)</data>
              <graph id="40::" edgedefault="directed">
                <node id="40::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = L2 InclusiveCache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="39">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_4 (TestHarness.dut.system.subsystem_mbus.fixedClockNode)</data>
              <graph id="39::" edgedefault="directed">
                <node id="39::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="38">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroup_4 (TestHarness.dut.system.subsystem_mbus.clockGroup)</data>
              <graph id="38::" edgedefault="directed">
                <node id="38::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="37">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_mbus_clock_groups</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_4 (TestHarness.dut.system.subsystem_mbus.subsystem_mbus_clock_groups)</data>
              <graph id="37::" edgedefault="directed">
                <node id="37::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="24">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_cbus</y:NodeLabel></y:ShapeNode></data>
          <data key="d">PeripheryBus_1 (TestHarness.dut.system.subsystem_cbus)</data>
          <graph id="24::" edgedefault="directed">
            <node id="24::1">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
            </node>
            <node id="24::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="126">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bootrom</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_13 (TestHarness.dut.system.subsystem_cbus.coupler_to_bootrom)</data>
              <graph id="126::" edgedefault="directed">
                <node id="127">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFragmenter_5 (TestHarness.dut.system.subsystem_cbus.coupler_to_bootrom.fragmenter)</data>
                  <graph id="127::" edgedefault="directed">
                    <node id="127::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="93">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_debug</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_11 (TestHarness.dut.system.subsystem_cbus.coupler_to_debug)</data>
              <graph id="93::" edgedefault="directed">
                <node id="94">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFragmenter_4 (TestHarness.dut.system.subsystem_cbus.coupler_to_debug.fragmenter)</data>
                  <graph id="94::" edgedefault="directed">
                    <node id="94::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="77">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_clint</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_10 (TestHarness.dut.system.subsystem_cbus.coupler_to_clint)</data>
              <graph id="77::" edgedefault="directed">
                <node id="78">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFragmenter_3 (TestHarness.dut.system.subsystem_cbus.coupler_to_clint.fragmenter)</data>
                  <graph id="78::" edgedefault="directed">
                    <node id="78::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="74">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_plic</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_9 (TestHarness.dut.system.subsystem_cbus.coupler_to_plic)</data>
              <graph id="74::" edgedefault="directed">
                <node id="75">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFragmenter_2 (TestHarness.dut.system.subsystem_cbus.coupler_to_plic.fragmenter)</data>
                  <graph id="75::" edgedefault="directed">
                    <node id="75::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="60">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_pbus</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_8 (TestHarness.dut.system.subsystem_cbus.coupler_to_bus_named_subsystem_pbus)</data>
              <graph id="60::" edgedefault="directed">
                <node id="60::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
                <node id="62">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_3 (TestHarness.dut.system.subsystem_cbus.coupler_to_bus_named_subsystem_pbus.widget)</data>
                  <graph id="62::" edgedefault="directed">
                    <node id="62::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="58">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_8 (TestHarness.dut.system.subsystem_cbus.buffer_1)</data>
              <graph id="58::" edgedefault="directed">
                <node id="58::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                </node>
              </graph>
            </node>
            <node id="52">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_l2_ctrl</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_7 (TestHarness.dut.system.subsystem_cbus.coupler_to_l2_ctrl)</data>
              <graph id="52::" edgedefault="directed">
                <node id="54">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFragmenter_1 (TestHarness.dut.system.subsystem_cbus.coupler_to_l2_ctrl.fragmenter)</data>
                  <graph id="54::" edgedefault="directed">
                    <node id="54::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 3

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 3

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="53">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLBuffer_7 (TestHarness.dut.system.subsystem_cbus.coupler_to_l2_ctrl.buffer)</data>
                  <graph id="53::" edgedefault="directed">
                    <node id="53::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 3

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:1, b:BufferParams:1, c:BufferParams:1, d:BufferParams:1, e:BufferParams:1</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="33">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">wrapped_error_device</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_6 (TestHarness.dut.system.subsystem_cbus.wrapped_error_device)</data>
              <graph id="33::" edgedefault="directed">
                <node id="35">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLBuffer_6 (TestHarness.dut.system.subsystem_cbus.wrapped_error_device.buffer)</data>
                  <graph id="35::" edgedefault="directed">
                    <node id="35::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 3

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                    </node>
                  </graph>
                </node>
                <node id="34">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">error</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLError (TestHarness.dut.system.subsystem_cbus.wrapped_error_device.error)</data>
                  <graph id="34::" edgedefault="directed">
                    <node id="34::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">
---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="32">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">atomics</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLAtomicAutomata_1 (TestHarness.dut.system.subsystem_cbus.atomics)</data>
              <graph id="32::" edgedefault="directed">
                <node id="32::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="31">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_5 (TestHarness.dut.system.subsystem_cbus.buffer)</data>
              <graph id="31::" edgedefault="directed">
                <node id="31::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="30">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">out_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_5 (TestHarness.dut.system.subsystem_cbus.out_xbar)</data>
              <graph id="30::" edgedefault="directed">
                <node id="30::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 3

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 3

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 1

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="29">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">in_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_4 (TestHarness.dut.system.subsystem_cbus.in_xbar)</data>
              <graph id="29::" edgedefault="directed">
                <node id="29::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="28">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLFIFOFixer_3 (TestHarness.dut.system.subsystem_cbus.fixer)</data>
              <graph id="28::" edgedefault="directed">
                <node id="28::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="27">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_3 (TestHarness.dut.system.subsystem_cbus.fixedClockNode)</data>
              <graph id="27::" edgedefault="directed">
                <node id="27::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="26">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroup_3 (TestHarness.dut.system.subsystem_cbus.clockGroup)</data>
              <graph id="26::" edgedefault="directed">
                <node id="26::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="25">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_cbus_clock_groups</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_3 (TestHarness.dut.system.subsystem_cbus.subsystem_cbus_clock_groups)</data>
              <graph id="25::" edgedefault="directed">
                <node id="25::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="19">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_fbus</y:NodeLabel></y:ShapeNode></data>
          <data key="d">FrontBus (TestHarness.dut.system.subsystem_fbus)</data>
          <graph id="19::" edgedefault="directed">
            <node id="19::1">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
            </node>
            <node id="19::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="129">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_port_named_serialadapter</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_5 (TestHarness.dut.system.subsystem_fbus.coupler_from_port_named_serialadapter)</data>
              <graph id="129::" edgedefault="directed">
                <node id="129::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
                <node id="131">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFIFOFixer_2 (TestHarness.dut.system.subsystem_fbus.coupler_from_port_named_serialadapter.fixer)</data>
                  <graph id="131::" edgedefault="directed">
                    <node id="131::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                    </node>
                  </graph>
                </node>
                <node id="130">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLBuffer_4 (TestHarness.dut.system.subsystem_fbus.coupler_from_port_named_serialadapter.buffer)</data>
                  <graph id="130::" edgedefault="directed">
                    <node id="130::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="65">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_3 (TestHarness.dut.system.subsystem_fbus.buffer)</data>
              <graph id="65::" edgedefault="directed">
                <node id="65::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="23">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_fbus_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_3 (TestHarness.dut.system.subsystem_fbus.subsystem_fbus_xbar)</data>
              <graph id="23::" edgedefault="directed">
                <node id="23::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="22">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_2 (TestHarness.dut.system.subsystem_fbus.fixedClockNode)</data>
              <graph id="22::" edgedefault="directed">
                <node id="22::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="21">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroup_2 (TestHarness.dut.system.subsystem_fbus.clockGroup)</data>
              <graph id="21::" edgedefault="directed">
                <node id="21::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="20">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_fbus_clock_groups</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_2 (TestHarness.dut.system.subsystem_fbus.subsystem_fbus_clock_groups)</data>
              <graph id="20::" edgedefault="directed">
                <node id="20::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="10">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_pbus</y:NodeLabel></y:ShapeNode></data>
          <data key="d">PeripheryBus (TestHarness.dut.system.subsystem_pbus)</data>
          <graph id="10::" edgedefault="directed">
            <node id="10::1">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
            </node>
            <node id="10::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="134">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_device_named_uart_0</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_4 (TestHarness.dut.system.subsystem_pbus.coupler_to_device_named_uart_0)</data>
              <graph id="134::" edgedefault="directed">
                <node id="134::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
                <node id="136">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fragmenter</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLFragmenter (TestHarness.dut.system.subsystem_pbus.coupler_to_device_named_uart_0.fragmenter)</data>
                  <graph id="136::" edgedefault="directed">
                    <node id="136::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = TLFragmenter
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 8]
supportsPutFull = TransferSizes[1, 8]
supportsPutPartial = TransferSizes[1, 8]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="61">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer_1</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_2 (TestHarness.dut.system.subsystem_pbus.buffer_1)</data>
              <graph id="61::" edgedefault="directed">
                <node id="61::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 4

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="18">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">atomics</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLAtomicAutomata (TestHarness.dut.system.subsystem_pbus.atomics)</data>
              <graph id="18::" edgedefault="directed">
                <node id="18::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="17">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLBuffer_1 (TestHarness.dut.system.subsystem_pbus.buffer)</data>
              <graph id="17::" edgedefault="directed">
                <node id="17::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
a:BufferParams:2, b:BufferParams:2, c:BufferParams:2, d:BufferParams:2, e:BufferParams:2</data>
                </node>
              </graph>
            </node>
            <node id="16">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">out_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_2 (TestHarness.dut.system.subsystem_pbus.out_xbar)</data>
              <graph id="16::" edgedefault="directed">
                <node id="16::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="15">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">in_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar_1 (TestHarness.dut.system.subsystem_pbus.in_xbar)</data>
              <graph id="15::" edgedefault="directed">
                <node id="15::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="14">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLFIFOFixer_1 (TestHarness.dut.system.subsystem_pbus.fixer)</data>
              <graph id="14::" edgedefault="directed">
                <node id="14::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 0

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="13">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast_1 (TestHarness.dut.system.subsystem_pbus.fixedClockNode)</data>
              <graph id="13::" edgedefault="directed">
                <node id="13::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="12">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroup_1 (TestHarness.dut.system.subsystem_pbus.clockGroup)</data>
              <graph id="12::" edgedefault="directed">
                <node id="12::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="11">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_pbus_clock_groups</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator_1 (TestHarness.dut.system.subsystem_pbus.subsystem_pbus_clock_groups)</data>
              <graph id="11::" edgedefault="directed">
                <node id="11::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="4">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_sbus</y:NodeLabel></y:ShapeNode></data>
          <data key="d">SystemBus (TestHarness.dut.system.subsystem_sbus)</data>
          <graph id="4::" edgedefault="directed">
            <node id="4::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
            <node id="106">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_boom_tile</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_3 (TestHarness.dut.system.subsystem_sbus.coupler_from_boom_tile)</data>
              <graph id="106::" edgedefault="directed">
                <node id="106::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
                <node id="107">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">buffer</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLBuffer (TestHarness.dut.system.subsystem_sbus.coupler_from_boom_tile.buffer)</data>
                  <graph id="107::" edgedefault="directed">
                    <node id="107::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
a:BufferParams:0, b:BufferParams:0, c:BufferParams:0, d:BufferParams:0, e:BufferParams:0</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="66">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_l2</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_2 (TestHarness.dut.system.subsystem_sbus.coupler_to_bus_named_subsystem_l2)</data>
              <graph id="66::" edgedefault="directed">
                <node id="67">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_2 (TestHarness.dut.system.subsystem_sbus.coupler_to_bus_named_subsystem_l2.widget)</data>
                  <graph id="67::" edgedefault="directed">
                    <node id="67::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="63">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_from_bus_named_subsystem_fbus</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule_1 (TestHarness.dut.system.subsystem_sbus.coupler_from_bus_named_subsystem_fbus)</data>
              <graph id="63::" edgedefault="directed">
                <node id="63::1">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
                <node id="64">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLWidthWidget_1 (TestHarness.dut.system.subsystem_sbus.coupler_from_bus_named_subsystem_fbus.widget)</data>
                  <graph id="64::" edgedefault="directed">
                    <node id="64::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="57">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">coupler_to_bus_named_subsystem_cbus</y:NodeLabel></y:ShapeNode></data>
              <data key="d">SimpleLazyModule (TestHarness.dut.system.subsystem_sbus.coupler_to_bus_named_subsystem_cbus)</data>
              <graph id="57::" edgedefault="directed">
                <node id="57::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                </node>
                <node id="59">
                  <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">widget</y:NodeLabel></y:ShapeNode></data>
                  <data key="d">TLWidthWidget (TestHarness.dut.system.subsystem_sbus.coupler_to_bus_named_subsystem_cbus.widget)</data>
                  <graph id="59::" edgedefault="directed">
                    <node id="59::0">
                      <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                      <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

, 
</data>
                    </node>
                  </graph>
                </node>
              </graph>
            </node>
            <node id="9">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixer</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLFIFOFixer (TestHarness.dut.system.subsystem_sbus.fixer)</data>
              <graph id="9::" edgedefault="directed">
                <node id="9::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

On Output Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="8">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">system_bus_xbar</y:NodeLabel></y:ShapeNode></data>
              <data key="d">TLXbar (TestHarness.dut.system.subsystem_sbus.system_bus_xbar)</data>
              <graph id="8::" edgedefault="directed">
                <node id="8::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

On Output Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]


---------------------------------------------

On Input Edge:

Client Name = serial
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

On Input Edge:

Client Name = Core 0 DCache
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 DCache MMIO
visibility = List(AddressSet(0x0, ~0x0))

Client Name = Core 0 ICache
visibility = List(AddressSet(0x0, ~0x0))


Manager Port Beatbytes = 8
Manager Port MinLatency = 2

Manager Name = error
Manager Address = List(AddressSet(0x3000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 4096]
supportsPutFull = TransferSizes[1, 4096]
supportsPutPartial = TransferSizes[1, 4096]
supportsHint = TransferSizes[1, 4096]

Manager Name = l2
Manager Address = List(AddressSet(0x2010000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = uart_0
Manager Address = List(AddressSet(0x54000000, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = plic
Manager Address = List(AddressSet(0xc000000, 0x3ffffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = clint
Manager Address = List(AddressSet(0x2000000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = dmInner
Manager Address = List(AddressSet(0x0, 0xfff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[0, 0]

Manager Name = bootrom
Manager Address = List(AddressSet(0x10000, 0xffff))
supportsAcquireT = TransferSizes[0, 0]
supportsAcquireB = TransferSizes[0, 0]
supportsArithmetic = TransferSizes[0, 0]
supportsLogical = TransferSizes[0, 0]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[0, 0]
supportsPutPartial = TransferSizes[0, 0]
supportsHint = TransferSizes[0, 0]

Manager Name = system
Manager Address = List(AddressSet(0x80000000, 0xfffffff))
supportsAcquireT = TransferSizes[64, 64]
supportsAcquireB = TransferSizes[64, 64]
supportsArithmetic = TransferSizes[1, 8]
supportsLogical = TransferSizes[1, 8]
supportsGet = TransferSizes[1, 64]
supportsPutFull = TransferSizes[1, 64]
supportsPutPartial = TransferSizes[1, 64]
supportsHint = TransferSizes[1, 64]

, 
</data>
                </node>
              </graph>
            </node>
            <node id="7">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">fixedClockNode</y:NodeLabel></y:ShapeNode></data>
              <data key="d">FixedClockBroadcast (TestHarness.dut.system.subsystem_sbus.fixedClockNode)</data>
              <graph id="7::" edgedefault="directed">
                <node id="7::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="6">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">clockGroup</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroup (TestHarness.dut.system.subsystem_sbus.clockGroup)</data>
              <graph id="6::" edgedefault="directed">
                <node id="6::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
            <node id="5">
              <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">subsystem_sbus_clock_groups</y:NodeLabel></y:ShapeNode></data>
              <data key="d">ClockGroupAggregator (TestHarness.dut.system.subsystem_sbus.subsystem_sbus_clock_groups)</data>
              <graph id="5::" edgedefault="directed">
                <node id="5::0">
                  <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
                  <data key="d">, 
</data>
                </node>
              </graph>
            </node>
          </graph>
        </node>
        <node id="3">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">dummyClockGroupSourceNode</y:NodeLabel></y:ShapeNode></data>
          <data key="d">SimpleClockGroupSource (TestHarness.dut.system.dummyClockGroupSourceNode)</data>
          <graph id="3::" edgedefault="directed">
            <node id="3::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">, 
</data>
            </node>
          </graph>
        </node>
        <node id="2">
          <data key="n"><y:ShapeNode><y:NodeLabel modelName="sides" modelPosition="w" rotationAngle="270.0">int_bus</y:NodeLabel></y:ShapeNode></data>
          <data key="d">IntXbar (TestHarness.dut.system.int_bus)</data>
          <graph id="2::" edgedefault="directed">
            <node id="2::0">
              <data key="e"><y:ShapeNode><y:Shape type="Ellipse"/></y:ShapeNode></data>
              <data key="d">Interrupt Node
, 
</data>
            </node>
          </graph>
        </node>
      </graph>
    </node>
    <edge target="1::15" source="137::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::7" source="95::20"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::6" source="95::19"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="1::5" source="95::18"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="137::0" source="2::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::4" source="1::15"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::3" target="135::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="133::1" source="138::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="133::0" target="1::16"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="138::0" source="133::4"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="135::0" target="133::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="128::0" target="129::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="117::0" source="1::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="115::0" source="1::6"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="113::0" source="1::5"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::20" source="116::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::19" source="114::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::18" source="112::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::16" target="106::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::15" target="96::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::12" target="102::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::11" source="71::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::10" source="72::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::9" source="70::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::7" source="98::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::7" source="98::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::7" source="98::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="95::7" source="98::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::6" target="101::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::5" target="100::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::4" target="95::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::2" target="95::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::1" target="99::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="95::0" target="108::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="116::0" source="95::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="114::0" source="95::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="112::0" source="95::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="111::0" source="95::7"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="108::0" target="95::16"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="105::0" target="96::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="103::0" target="95::15"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="102::0" target="1::14"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#cccc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="98::0" source="95::8"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">5</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="96::0" target="95::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="92::0" target="91::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="89::0" target="92::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#ff0000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="86::1" target="89::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="86::0" target="87::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="87::0" target="88::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="87::0" target="86::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="85::0" source="111::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#ff00ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="84::0" source="85::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="83::0" target="82::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="82::0" target="86::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="82::0" target="84::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">32</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="79::0" target="91::2"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#20B2AA" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="76::1" source="113::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">2</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="73::1" source="115::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="73::1" source="117::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="72::0" source="1::3"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="71::0" source="1::2"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="70::0" source="1::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="69::0" target="41::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="56::0" target="69::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="55::0" target="48::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="51::0" target="56::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="50::0" target="51::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="49::0" target="47::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="48::0" target="49::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="47::0" target="50::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="46::0" target="43::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="45::0" target="46::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="44::0" target="45::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="44::0" target="37::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="124::0" target="123::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="123::0" target="122::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="122::0" target="121::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="121::0" target="1::10"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00ccff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="42::0" target="124::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="41::0" target="40::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="40::0" target="42::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="39::0" target="36::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="38::0" target="39::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="37::0" target="38::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="24::1" target="58::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="127::0" target="125::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="94::0" target="91::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="78::0" target="76::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="75::0" target="73::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="60::0" target="10::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="62::0" target="60::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="58::0" target="29::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="54::0" target="53::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="53::0" target="47::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="35::0" target="34::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="32::0" target="31::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="31::0" target="28::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="35::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="54::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="62::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="75::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="78::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="94::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="30::0" target="127::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="29::0" target="32::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="28::0" target="30::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="27::0" target="24::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="26::0" target="27::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="25::0" target="26::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="25::0" target="11::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="19::1" source="63::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="129::0" target="131::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="131::0" target="130::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="130::0" target="23::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="65::0" source="19::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="23::0" source="65::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="22::0" target="19::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="21::0" target="22::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="20::0" target="21::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="10::1" target="61::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="134::0" target="133::3"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="136::0" target="134::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="61::0" target="15::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="18::0" target="17::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="17::0" target="14::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="16::0" target="136::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="15::0" target="18::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="14::0" target="16::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="13::0" target="10::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="13::0" target="132::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="12::0" target="13::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="11::0" target="12::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="106::0" target="107::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="107::0" target="9::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="67::0" target="55::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="63::1" source="64::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="64::0" target="9::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="57::0" target="24::1"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="59::0" target="57::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="9::0" target="8::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="9::0" target="8::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="59::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="8::0" target="67::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#000000" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">64</y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="7::0" target="4::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="6::0" target="7::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="5::0" target="6::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="5::0" target="25::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="5::0" source="20::0"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="5::0" target="44::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge source="3::0" target="5::0"><data key="e"><y:PolyLineEdge><y:Arrows source="none" target="standard"/><y:LineStyle color="#00cc00" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0"></y:EdgeLabel></y:PolyLineEdge></data></edge>
    <edge target="2::0" source="73::1"><data key="e"><y:PolyLineEdge><y:Arrows source="standard" target="none"/><y:LineStyle color="#0000ff" type="line" width="1.0"/><y:EdgeLabel modelName="centered" rotationAngle="270.0">1</y:EdgeLabel></y:PolyLineEdge></data></edge>
  </graph>
</graphml>
